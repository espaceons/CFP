"""
Django settings for gestion_pedagogique project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gti1gwmhf8iqts3xju03p=o0dc&kob9r1d2e$)lsx9qdo5h&ms'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# AUTH_USER_MODEL = 'gestion_users.CustomUser'
# On doit définir le modèle utilisateur personnalisé avant de faire les migrations
# pour que Django sache quel modèle utiliser pour les utilisateurs.
# ------------------------------------------
AUTH_USER_MODEL = 'gestion_users.CustomUser'


# Votre vue de connexion est nommée 'login' dans l'application 'gestion_users'.
LOGIN_URL = 'gestion_users:login'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gestion_users',  # gestion des utilisateurs
    'gestion_formations',  # gestion des formations
    'gestion_inscriptions',  # gestion des inscriptions
    'gestion_notes',  # gestion des notes
    'widget_tweaks',  # pour les widgets de formulaire
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gestion_pedagogique.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Répertoire des templates
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gestion_pedagogique.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# configuration de statics
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# configuration de media
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# --- Configuration Email pour GMAIL (Production) ---

# À utiliser en production. N'oubliez pas d'utiliser des variables d'environnement pour les identifiants !
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'       # L'hôte SMTP de Gmail
EMAIL_PORT = 587                         # Le port standard pour TLS
EMAIL_USE_TLS = True                     # Utiliser TLS
# Ne pas utiliser SSL si vous utilisez TLS sur le port 587
EMAIL_USE_SSL = False

# Votre adresse email Gmail complète
EMAIL_HOST_USER = 'smrjemaa@gmail.com'  # <-- VOTRE adresse Gmail

# *** IMPORTANT : Ce n'est PAS votre mot de passe Gmail habituel ! ***
# Vous devez générer un "Mot de passe d'application" Google.
# <-- À REMPLACER par le Mot de passe d'application
EMAIL_HOST_PASSWORD = '123.456.SamirYosra'

# L'adresse email qui apparaîtra dans le champ "De"
# Elle doit correspondre à votre EMAIL_HOST_USER
# <-- À REMPLACER (Nom optionnel)
DEFAULT_FROM_EMAIL = 'jemaa samir <smrjemaa@gmail.com>'

# Adresse email pour les notifications d'erreur du serveur
SERVER_EMAIL = DEFAULT_FROM_EMAIL

# Optionnel : Timeout de connexion
# EMAIL_TIMEOUT = 5

# --- Fin Configuration Email GMAIL ---


# --- Configuration Email (pour le DÉVELOPPEMENT) ---
# Activez CELA en développement, DESACTIVEZ la configuration PRODUCTION ci-dessus
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# --- Fin Configuration Email (pour le DÉVELOPPEMENT) ---
